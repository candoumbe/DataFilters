variables :
  - name: 'configuration'
    value: 'Release'
  - name: 'Parameters.projects'
    value: '**/*.csproj'
  - name: 'Parameters.projects.tests'
    value: '**/*Tests/*.csproj'
  - name: 'majorVersion'
    value: '1'
  - name: 'minorVersion'
    value: '0'
  - name: 'patchVersion'
    value: '0'
  - name : 'projectName'
    value: 'DataFilters'
  - name: 'azureArtifactFeed'
    value: 'Filters'
  
pr:
  - master

trigger:
  batch: true
  branches:
    include:
        - master
        - features/*
        - fixes/*
  paths:
    exclude:
        - README.md
        - docs/



pool:
  name: Hosted VS2017
#Your build pipeline references an undefined variable named ‘Parameters.projects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references a secret variable named ‘github.apiKey’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 3.x'
  inputs:
    version: 3.x
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 3.0.100'
  inputs:
    version: 3.0.100

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 2.2.401'
  inputs:
    version: 2.2.401

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '$(Parameters.projects)'
    feedsToUse: config
    nugetConfigPath: Nuget.config
    verbosityRestore: Normal

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '$(Parameters.projects)'
    arguments: '--no-restore -c $(configuration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '$(Parameters.projects.tests)'
    arguments: '--no-build -c $(configuration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: pack
    nobuild: true
    versioningScheme: byPrereleaseNumber
    majorVersion: '$(majorVersion)'
    minorVersion: '$(minorVersion)'
    patchVersion: '$(patchVersion)'
  condition: succeededOrFailed()

- task: DotNetCoreCLI@2
  displayName: 'dotnet push'
  inputs:
    command: push
    publishVstsFeed: '$(azureArtifactFeed)'
    majorVersion: '$(majorVersion)'
    minorVersion: '$(minorVersion)'
    patchVersion: '$(patchVersion)'
  enabled: false

- task: nkdagility.gittasks.gitsync-task.gitsync@1
  displayName: 'Git Publish to https://$(github.apiKey)@github.com/candoumbe/$(projectName).git'
  inputs:
    GitRepoUrl: 'https://$(github.apiKey)@github.com/candoumbe/$(projectName).git'
  condition: succeededOrFailed()